#!/usr/bin/env python3
"""
Script de test pour v√©rifier la configuration email
Usage: python3 test_email.py
"""

import os
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from datetime import datetime

# Configuration (charger depuis .env si disponible)
ADMIN_EMAIL = "contact.fortniteitems@gmail.com"
SMTP_SERVER = "smtp.gmail.com"
SMTP_PORT = 587
SMTP_EMAIL = os.getenv("SMTP_EMAIL", "")
SMTP_PASSWORD = os.getenv("SMTP_PASSWORD", "")

def test_email():
    """Envoie un email de test"""
    
    print("=" * 60)
    print("üß™ TEST EMAIL - FortniteItems")
    print("=" * 60)
    
    # V√©rifier la configuration
    if not SMTP_EMAIL or not SMTP_PASSWORD:
        print("‚ùå ERREUR: Variables d'environnement manquantes")
        print("\nConfigurer dans .env:")
        print("  SMTP_EMAIL=votre-email@gmail.com")
        print("  SMTP_PASSWORD=votre-mot-de-passe-app")
        print("\nüìñ Voir GUIDE_EMAIL_CONFIG.md pour la configuration compl√®te")
        return False
    
    print(f"\nüìß Email exp√©diteur: {SMTP_EMAIL}")
    print(f"üì¨ Email destinataire: {ADMIN_EMAIL}")
    print(f"üåê Serveur SMTP: {SMTP_SERVER}:{SMTP_PORT}")
    
    # Cr√©er un email de test
    subject = f"üß™ TEST FortniteItems - {datetime.now().strftime('%H:%M:%S')}"
    
    html_content = f"""
    <html>
        <head>
            <style>
                body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                .header {{ background-color: #4CAF50; color: white; padding: 20px; text-align: center; }}
                .content {{ padding: 20px; }}
                .success-box {{ background: #d4edda; border: 1px solid #c3e6cb; padding: 15px; border-radius: 5px; }}
            </style>
        </head>
        <body>
            <div class="header">
                <h1>üß™ Test Email R√©ussi !</h1>
            </div>
            <div class="content">
                <div class="success-box">
                    <h3>‚úÖ Configuration Email Fonctionnelle</h3>
                    <p>Ce message confirme que votre configuration SMTP Gmail fonctionne correctement.</p>
                    <p><strong>Timestamp:</strong> {datetime.now().isoformat()}</p>
                </div>
                <h3>üìù Prochaines √âtapes</h3>
                <ul>
                    <li>‚úÖ La configuration email est op√©rationnelle</li>
                    <li>üîú Les notifications de commande seront envoy√©es automatiquement</li>
                    <li>üìß V√©rifiez votre bo√Æte de r√©ception principale</li>
                    <li>üóÇÔ∏è Si vous ne voyez pas cet email, v√©rifiez les spams</li>
                </ul>
                <p style="margin-top: 30px; color: #666; font-size: 12px;">
                    Email automatique - FortniteItems Backend<br>
                    Support WhatsApp: +229 65 62 36 91
                </p>
            </div>
        </body>
    </html>
    """
    
    try:
        print("\n‚è≥ Connexion au serveur SMTP...")
        
        # Cr√©er le message
        msg = MIMEMultipart('alternative')
        msg['From'] = SMTP_EMAIL
        msg['To'] = ADMIN_EMAIL
        msg['Subject'] = subject
        
        # Ajouter le contenu HTML
        html_part = MIMEText(html_content, 'html')
        msg.attach(html_part)
        
        # Envoyer l'email
        with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server:
            server.starttls()
            print("üîê Authentification...")
            server.login(SMTP_EMAIL, SMTP_PASSWORD)
            print("üì§ Envoi de l'email...")
            server.send_message(msg)
        
        print("\n" + "=" * 60)
        print("‚úÖ EMAIL ENVOY√â AVEC SUCC√àS !")
        print("=" * 60)
        print(f"\nüì¨ V√©rifiez votre bo√Æte email: {ADMIN_EMAIL}")
        print("üîç Si vous ne le voyez pas, v√©rifiez:")
        print("   - Dossier Inbox")
        print("   - Dossier Spam/Courrier ind√©sirable")
        print("   - Dossier Promotions (Gmail)")
        print("\n‚ú® Configuration email fonctionnelle ! Pr√™t pour la production.")
        return True
        
    except smtplib.SMTPAuthenticationError as e:
        print("\n" + "=" * 60)
        print("‚ùå ERREUR D'AUTHENTIFICATION")
        print("=" * 60)
        print("\nüîë V√©rifiez:")
        print("   1. Vous utilisez un MOT DE PASSE D'APPLICATION (pas votre mot de passe Gmail)")
        print("   2. La validation en 2 √©tapes est activ√©e sur Gmail")
        print("   3. Le mot de passe ne contient pas d'espaces")
        print("\nüìñ Consultez GUIDE_EMAIL_CONFIG.md pour les instructions compl√®tes")
        print(f"\nD√©tails: {str(e)}")
        return False
        
    except Exception as e:
        print("\n" + "=" * 60)
        print("‚ùå ERREUR LORS DE L'ENVOI")
        print("=" * 60)
        print(f"\nD√©tails: {str(e)}")
        print(f"Type: {type(e).__name__}")
        return False

if __name__ == "__main__":
    # Charger les variables d'environnement depuis .env si disponible
    try:
        from dotenv import load_dotenv
        load_dotenv()
        print("üìÅ Fichier .env charg√©")
    except ImportError:
        print("‚ö†Ô∏è  python-dotenv non install√© (optionnel)")
        print("   Installer: pip install python-dotenv")
    
    success = test_email()
    exit(0 if success else 1)
